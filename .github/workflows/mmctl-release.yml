name: mmctl release
on:
  # This workflow gets triggered from the Argo Events platform.
  # Check the following repo for details: https://github.com/mattermost/delivery-platform
  workflow_dispatch:
    inputs:
      payload:
        description: "The triggerer payload"
        required: true
        type: string

defaults:
  run:
    shell: bash
    working-directory: server

env:
  go-version: "1.19.5"

jobs:
  update-initial-status:
    runs-on: ubuntu-22.04
    steps:
      - uses: mattermost/actions/delivery/update-commit-status@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repository_full_name: ${{ github.repository }}
          commit_sha: ${{ github.sha }}
          context: mmctl/publish
          description: Publish mmctl binaries
          status: pending

  expose-incoming-variables:
    runs-on: ubuntu-22.04
    outputs:
      ref_name: ${{ env.TRIGGERER_BRANCH }}
    steps:
      - uses: mattermost/actions/delivery/expose-events-vars@a74f6d87f847326c04d326bf1908da40cb9b3556
        with:
          payload: ${{ inputs.payload }}

  build:
    runs-on: ubuntu-22.04
    needs:
      - update-initial-status
      - expose-incoming-variables
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
        exclude:
          - os: windows
            arch: arm64
    env:
      GOBIN: "bin"
      GOOS: "${{ matrix.os }}"
      GOARCH: "${{ matrix.arch }}"
      DRY_RUN: "${{ inputs.dry_run || true }}"
    steps:
      - name: ci/checkout-repo
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
      - name: ci/setup-go
        uses: actions/setup-go@4d34df0c2316fe8122ab82dc22947d607c0c91f9 # v4.0.0
        with:
          go-version: ${{ env.go-version }}
          cache-dependency-path: |
            server/go.sum
            server/public/go.sum
      - name: ci/mmctl-package
        run: |
          mkdir -p .mmctl-build
          make mmctl-build
          case $GOOS in
          windows )
            ARCHIVE_PATH=".mmctl-build/${GOOS}_${GOARCH}.zip"
            zip ${ARCHIVE_PATH} bin/mmctl.exe
            rm bin/mmctl.exe
            ;;
          * )
            ARCHIVE_PATH=".mmctl-build/${GOOS}_${GOARCH}.tar"
            tar -cvf ${ARCHIVE_PATH} bin/mmctl
            rm bin/mmctl
            ;;
          esac
          md5sum < ${ARCHIVE_PATH} | cut -d ' ' -f 1 | tee ${ARCHIVE_PATH}.md5.txt
      - name: ci/mmctl-upload-jobartifact
        uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce # v3.1.2
        with:
          name: "${{ matrix.os }}_${{ matrix.arch }}"
          path: server/.mmctl-build/*
      - name: ci/configure-aws-credentials
        uses: aws-actions/configure-aws-credentials@5fd3084fc36e372ff1fff382a39b10d03659f355 # v2.2.0
        with:
          aws-region: us-east-1
          aws-access-key-id: ${{ secrets.MM_SERVER_RELEASES_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.MM_SERVER_RELEASES_AWS_SECRET_ACCESS_KEY }}
      - name: ci/mmctl-upload-s3
        run: |
          aws s3 cp .mmctl-build/ s3://releases.mattermost.com/mmctl/${{ needs.expose-incoming-variables.outputs.ref_name }}/ --acl public-read --cache-control "no-cache" --recursive

  update-failure-final-status:
    runs-on: ubuntu-22.04
    if: failure() || cancelled()
    needs:
      - build
    steps:
      - uses: mattermost/actions/delivery/update-commit-status@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repository_full_name: ${{ github.repository }}
          commit_sha: ${{ github.sha }}
          context: mmctl/publish
          description: Publish mmctl binaries
          status: failure

  update-success-final-status:
    runs-on: ubuntu-22.04
    if: success()
    needs:
      - build
    steps:
      - uses: mattermost/actions/delivery/update-commit-status@main
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          repository_full_name: ${{ github.repository }}
          commit_sha: ${{ github.sha }}
          context: mmctl/publish
          description: Publish mmctl binaries
          status: success
